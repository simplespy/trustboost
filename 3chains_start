#!/bin/bash
# two-chainz creates two wasmd chains and configures the relayer to 

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
WASMD_DATA="$(pwd)/data"
RELAYER_DIR="$(dirname $SCRIPTDIR)"
RELAYER_CONF="$HOME/.relayer"

# Ensure wasmd is installed
if ! [ -x "$(which wasmd)" ]; then
  echo "Error: wasmd is not installed. Try running 'make build-wasmd'" >&2
  exit 1
fi

# Display software version for testers
echo "WASMD VERSION INFO:"
wasmd version --long

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Ensure user understands what will be deleted
if [[ -d $WASMD_DATA ]] && [[ ! "$1" == "skip" ]]; then
  read -p "$(basename $0) will delete \$(pwd)/data and \$HOME/.relayer folders. Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Delete data from old runs
rm -rf $WASMD_DATA &> /dev/null
rm -rf $RELAYER_CONF &> /dev/null

# Stop existing wasmd processes
killall wasmd &> /dev/null

set -e

chainid0=ibc-0
chainid1=ibc-1
chainid2=ibc-2

echo "Generating WASMD configurations..."
mkdir -p $WASMD_DATA && cd $WASMD_DATA && cd ../
./one-chain wasmd $chainid0 ./data 26550 26660 6060 9090
./one-chain wasmd $chainid1 ./data 26551 26661 6061 9091
./one-chain wasmd $chainid2 ./data 26552 26662 6062 9092

[ -f $WASMD_DATA/$chainid0.log ] && echo "$chainid0 initialized. Watch file $WASMD_DATA/$chainid0.log to see its execution."
[ -f $WASMD_DATA/$chainid1.log ] && echo "$chainid1 initialized. Watch file $WASMD_DATA/$chainid1.log to see its execution."
[ -f $WASMD_DATA/$chainid2.log ] && echo "$chainid2 initialized. Watch file $WASMD_DATA/$chainid2.log to see its execution."

echo "Generating rly configurations..."
rly config init
# rly config add-chains configs/wasmd/3chains/chains
CHAIN_DIR=configs/wasmd/3chains/chains
rly chains add -f $CHAIN_DIR/ibc-0.json
rly chains add -f $CHAIN_DIR/ibc-1.json
rly chains add -f $CHAIN_DIR/ibc-2.json

SEED0=$(jq -r '.mnemonic' $WASMD_DATA/ibc-0/testkey_seed.json)
SEED1=$(jq -r '.mnemonic' $WASMD_DATA/ibc-1/testkey_seed.json)
SEED2=$(jq -r '.mnemonic' $WASMD_DATA/ibc-2/testkey_seed.json)
echo "Key $(rly keys restore ibc-0 testkey "$SEED0") imported from ibc-0 to relayer..."
echo "Key $(rly keys restore ibc-1 testkey "$SEED1") imported from ibc-1 to relayer..."
echo "Key $(rly keys restore ibc-2 testkey "$SEED2") imported from ibc-2 to relayer..."

# PATH_DIR=configs/wasmd/3chains/paths
# rly config add-paths configs/wasmd/3chains/paths
rly paths new ibc-0 ibc-1 mypath0-1
rly paths new ibc-0 ibc-2 mypath0-2
rly paths new ibc-1 ibc-2 mypath1-2

set +x
